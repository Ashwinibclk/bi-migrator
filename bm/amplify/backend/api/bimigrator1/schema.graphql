# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Tableaulogin @model {
 id: ID!
 username: String!
 password: String!
 sitename: String!
 siteurl: String!
 tenv:TableauEnv @hasOne(fields:"id")
}
 
type Quicksightlogin @model {
 id: ID!
 awsaccountId: ID!
 qenv:QuicksightEnv @hasOne(fields:"id")
}
 
type Customer @model {
 name: ID! @primaryKey
 DName: Departments!
 Did:ID!
 department: Department @belongsTo(fields:["Did"])
}
 
type Department @model {
 Did:ID!
 DName:Departments!
 customers: [Customer] @hasMany(fields:["Did"])
 tprojects:[TableauProject] @hasMany(fields:["Did"])
 qprojects:[QuicksightProject] @hasMany(fields:["Did"])
}
 
type BIMProject @model{
 DName:Departments!
 UserName:ID!
 Customer:Customer @hasOne(fields:["UserName"])
 Pname:String!
 source:BIPlatform!
 destination:BIPlatform!
}
 
enum BIPlatform {
 TABLEAU
 QUICKSIGHT
}
 
enum Departments {
 MARKETING
 FINANCE
 HR
 SALES
 PURCHASE
}
 
type dataset @model{
 datasetid:ID!
 name:String!
 datasources:[datasources] @hasMany(fields:["datasetid"])
 Files:[File] @hasMany(fields:["datasetid"])
 
}
 
type File @model{
name:String!
url:String!
datasetid:ID!
datasets:dataset @belongsTo(fields:["datasetid"])
}
 
type datasources @model{
dsid:ID!
name:String!
datasetid:ID!
datasets:dataset @belongsTo(fields:["datasetid"])
table:[Table] @hasMany(fields:["dsid"])
databaseserver:String!
port:Int!
databasename:String!
username:String!
password:String!
}
 
 
type TableauProject @model {
 tpid:ID!
 name:String!
 Did:ID!
 department:Department @belongsTo(fields:["Did"])
}
 
type TableauEnv @model {
 name:String!
 tpid:ID!
 tproject: TableauProject @hasOne(fields:["tpid"])
 
}
 
type TaleauWorkbook @model {
 
 name: String!
 tpid:ID!
 twbid:ID!
 tproject: TableauProject @hasOne(fields:["tpid"])
 }
 
type TableauSheet @model {
 name:String!
 twbid:ID!
 tsid:ID!
 tworkbook: TaleauWorkbook @hasOne(fields:["twbid"])
}
 
type TableauGraph @model {
 
 name:String!
 tsid:ID!
 tsheet: TableauSheet @hasOne(fields:["tsid"])
 
}
 
 
type QuicksightProject @model {
 id:ID!
 name: String!
 Did:ID!
 department: Department @belongsTo(fields:["Did"])
 templates: [QuicksightTemplate] @hasMany(fields:["id"])
 env:[QuicksightEnv] @hasMany(fields:["id"])
}
 
type QuicksightTemplate @model {
 id:ID!
 name:String!
 sourceanalysisId: ID!
 Qpid:ID!
 qproject: QuicksightProject @belongsTo(fields:["Qpid"])
 qanalysis: [QuicksightAnalysis] @hasMany(fields:["id"])
qdashboard: [QuicksightDashboard] @hasMany(fields:["id"])
}
 
 
type QuicksightAnalysis @model {
 name:String!
 QuicksightTemplateId: ID!
 sourceanalysisId: ID!
 qtemplate: QuicksightTemplate @belongsTo(fields:["sourceanalysisId"])
}
 
 
type QuicksightEnv @model {
 name:String!
 Qpid:ID!
 qproject:QuicksightProject @belongsTo(fields:["Qpid"])
}
 
type QuicksightDashboard @model {
 name:String!
 qtid:ID!
 qtemplate: QuicksightTemplate @belongsTo(fields:["qtid"])
}
 
type Table @model {
name:String!
dsid:ID!
datasource: datasources @belongsTo(fields:["dsid"])
}
 
type QuicksightFolder @model {
 
 name:String!
 
 
}
 
type QuicksightGroup @model {
 
 name:String!
 }
 
type comments @model {
 
 comments:String!
}
 
type tprojects @model {
  id:ID! 
  name:String! 
  description:String!
 
}

type tdatasources @model {
 id:ID!
 filepath:String!
 name:String!

}
 
type tworkbooks @model{
 name:String!
 id:ID!
 projectname:String! 
 
}

type message {
    body:String!
    body1:String!
    body2:String!
}

type quick{
  body:String!
}

type aws{
  body:String!
}
type tabauth{
  body:String!
}

type Query{
  getMessage(username:String! password:String! sitename:String! siteurl:String!) :message @function (name: "tableau-${env}")
  getquick(dsid:String! id:String! awsaccountId:String!  projectname:String!   region:String! pname:String! username:String!):quick!
  getaws(access:String! secret:String! username:String! awsaccountId:String!):aws!
  tableauauth(username:String! password:String! sitename:String! siteurl:String!):tabauth!
}





type tptds @model{
  id:ID!
  dsid:ID!
  name:String!
  pname:String!
  filepath:String!
  username:String!
}

type twtp @model{
  id:ID!
  pid:ID!
  pname:String!
  workbookname:String!
  username:String!
}

type xmlinput @model{
  id:ID!
  sheetname:String!
  xaxis:String!
  yaxis:String!
  dimensional:String!
  numerical:String!
  formula:String!
  charttype:String!
}